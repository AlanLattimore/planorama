{
	"info": {
		"_postman_id": "42e35806-0dc4-4c18-a692-a430ab1a531a",
		"name": "Planorama API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Autheticate",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// const newAccessToken = responseHeaders['Authorization'].replace('Bearer','');",
									"// console.log('****', newAccessToken);",
									"// postman.setEnvironmentVariable(\"jwt-token\", newAccessToken);",
									"// Save the JWT in the collection variable for use by other requests",
									"// pm.collectionVariables.set('jwt-token', newAccessToken);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"person\": {\n        \"email\": \"test@test.com\",\n        \"password\": \"111111\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/auth/sign_in",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"sign_in"
							]
						},
						"description": "Log the person into the system. It will return the JWT token in the header which is needed for subsequent requests."
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "People",
			"item": [
				{
					"name": "Me Session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/person/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"person",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get People",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"person-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"person"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assigned Surveys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/person/{{person-id}}/assigned_surveys",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"person",
								"{{person-id}}",
								"assigned_surveys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Survey Submissions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/person/{{person-id}}/submissions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"person",
								"{{person-id}}",
								"submissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Survey Submissions For Survey",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/person/{{person-id}}/survey/{{survey-id}}/submissions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"person",
								"{{person-id}}",
								"survey",
								"{{survey-id}}",
								"submissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get People Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"person-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"person"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Surveys",
			"item": [
				{
					"name": "Get Surveys",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"survey-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/survey",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Surveys For Person via Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"survey-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/survey?filter={\"rules\":[[\"assigned_people.person_id\", \"=\", \"{{person-id}}\"]]}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"rules\":[[\"assigned_people.person_id\", \"=\", \"{{person-id}}\"]]}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Surveys Via Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"survey-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/survey?filter={\"rules\":[[\"surveys.id\", \"=\", \"{{survey-id}}\"]]}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"rules\":[[\"surveys.id\", \"=\", \"{{survey-id}}\"]]}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign People to Survey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"people\": [\n        {\n            \"id\": \"{{person-id}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/survey/{{survey-id}}/assign_people",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey",
								"{{survey-id}}",
								"assign_people"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnAssign People to Survey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"people\": [\n        {\n            \"id\": \"{{person-id}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/survey/{{survey-id}}/unassign_people",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey",
								"{{survey-id}}",
								"unassign_people"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pages for Survey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"page-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/survey/{{survey-id}}/page",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey",
								"{{survey-id}}",
								"page"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get A Survey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// var jsonData = JSON.parse(responseBody);",
									"// //console.log('***', jsonData['data'][0].id);",
									"// pm.collectionVariables.set(\"page-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/survey/{{survey-id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey",
								"{{survey-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Questions for Page",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/page/{{page-id}}/question",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"page",
								"{{page-id}}",
								"question"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Submissions for Survey",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/survey/{{survey-id}}/submission",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"survey",
								"{{survey-id}}",
								"submission"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Mailings",
			"item": [
				{
					"name": "Get Mail Templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"mail-template-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/mail_template",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"mail_template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Mail Template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"title\": \"{{$randomLoremWords}}\",\n    \"subject\": \"{{$randomLoremWords}}\",\n    \"content\": \"{{$randomLoremParagraph}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/mail_template",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"mail_template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mailing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"mailing-id\", jsonData['data'][0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/mailing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"mailing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Mailing",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mail_template_id\": \"{{mail-template-id}}\",\n    \"scheduled\": false,\n    \"testrun\": false,\n    \"include_email\": false,\n    \"cc_all\": false\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/mailing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"mailing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Mailing",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/mailing/{{mailing-id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"mailing",
								"{{mailing-id}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwt-token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Program Items",
			"item": []
		},
		{
			"name": "Venues",
			"item": [
				{
					"name": "Venues",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/venue",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"venue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rooms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/room",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"room"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agreements",
			"item": [
				{
					"name": "Get My Agreements Signed",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/agreement/signed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"agreement",
								"signed"
							]
						},
						"description": "#postman-to-openapi  \n| object | name | description | required | type | example |  \n|---|---|---|---|---|---|  \n| path | person-id | The id pf the person being retreived | true | UUID |8bcac661-a82e-4461-9910-ef017566e9a8 |"
					},
					"response": []
				},
				{
					"name": "Get My Agreements UnSigned (only latest versions)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/agreement/unsigned",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"agreement",
								"unsigned"
							]
						},
						"description": "#postman-to-openapi  \n| object | name | description | required | type | example |  \n|---|---|---|---|---|---|  \n| path | person-id | The id pf the person being retreived | true | UUID |8bcac661-a82e-4461-9910-ef017566e9a8 |"
					},
					"response": []
				},
				{
					"name": "Get Latest Agreements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//console.log('***', jsonData['data'][0].id);",
									"pm.collectionVariables.set(\"agreement-id\", jsonData['data'][0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/agreement/latest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"agreement",
								"latest"
							]
						},
						"description": "#postman-to-openapi  \n| object | name | description | required | type | example |  \n|---|---|---|---|---|---|  \n| path | person-id | The id pf the person being retreived | true | UUID |8bcac661-a82e-4461-9910-ef017566e9a8 |"
					},
					"response": []
				},
				{
					"name": "Sign an Agreement",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/agreement/sign/{{agreement-id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"agreement",
								"sign",
								"{{agreement-id}}"
							]
						},
						"description": "#postman-to-openapi  \n| object | name | description | required | type | example |  \n|---|---|---|---|---|---|  \n| path | person-id | The id pf the person being retreived | true | UUID |8bcac661-a82e-4461-9910-ef017566e9a8 |"
					},
					"response": []
				},
				{
					"name": "Get All Agreements",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/agreement",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"agreement"
							]
						},
						"description": "#postman-to-openapi  \n| object | name | description | required | type | example |  \n|---|---|---|---|---|---|  \n| path | person-id | The id pf the person being retreived | true | UUID |8bcac661-a82e-4461-9910-ef017566e9a8 |"
					},
					"response": []
				},
				{
					"name": "Create an Agreement",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"title\": \"{{$randomLoremWords}}\",\n    \"terms\": \"{{$randomLoremParagraph}}\",\n    \"agrement_type\": \"stuff\",\n    \"target\": \"all\"\n    // created_by_id\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/agreement",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"agreement"
							]
						},
						"description": "#postman-to-openapi  \n| object | name | description | required | type | example |  \n|---|---|---|---|---|---|  \n| path | person-id | The id pf the person being retreived | true | UUID |8bcac661-a82e-4461-9910-ef017566e9a8 |"
					},
					"response": []
				}
			]
		},
		{
			"name": "RBAC",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt-token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/rbac",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rbac"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// const getTokenRequest = {",
					"//   method: 'POST',",
					"//   url: 'http://localhost:3000/auth/sign_in',",
					"//   header: {",
					"//     'Content-Type': 'application/json',",
					"//     'Accept': 'application/json'",
					"//   },",
					"//   body: {",
					"//     mode: 'raw',",
					"//     raw: JSON.stringify({\"person\": { \"email\": \"test@test.com\", \"password\": \"111111\" }})",
					"//   }",
					"// };",
					"",
					"// pm.sendRequest(",
					"//   getTokenRequest, ",
					"//   (err, response) => {",
					"//     const newAccessToken = response.headers.get('Authorization').replace('Bearer','');",
					"//     pm.variables.set('jwt-token', newAccessToken);",
					"//   }",
					"// );",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "jwt-token",
			"value": ""
		},
		{
			"key": "survey-id",
			"value": ""
		},
		{
			"key": "page-id",
			"value": ""
		},
		{
			"key": "template-title",
			"value": ""
		},
		{
			"key": "template-subject",
			"value": ""
		},
		{
			"key": "template-content",
			"value": ""
		},
		{
			"key": "mail-template-id",
			"value": ""
		},
		{
			"key": "mailing-id",
			"value": ""
		},
		{
			"key": "person-id",
			"value": ""
		},
		{
			"key": "agreement-id",
			"value": ""
		}
	]
}